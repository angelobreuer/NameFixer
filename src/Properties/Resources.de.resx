<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CouldNotExtractOrdinal" xml:space="preserve">
    <value>Warnung: Konnte keine Ordinalnummer extrahieren: "{0}", überspringe Datei...</value>
    <comment>{0} = File path</comment>
  </data>
  <data name="FolderOptionDescription" xml:space="preserve">
    <value>Der Ordner mit den zu-umbennenden Dateien.</value>
  </data>
  <data name="FormatOptionDescription" xml:space="preserve">
    <value>Das Format des Zielnamens, dabei wird "{0}" durch die Sequenznummer ersetzt.</value>
  </data>
  <data name="MapGenerationFailed" xml:space="preserve">
    <value>Die Dateinamen-Map konnte nicht generiert werden.</value>
  </data>
  <data name="PaddingOptionDescription" xml:space="preserve">
    <value>Die minimale Länge der Sequenznummer. Falls die Sequenznummer nicht der minimalen Länge entspricht wird sie von links mit nullen aufgefüllt.</value>
  </data>
  <data name="PreserveExtensionOptionDescription" xml:space="preserve">
    <value>Aktiviert, dass Dateierweiterungen erhalten bleiben sollen.</value>
  </data>
  <data name="RunningSimulation" xml:space="preserve">
    <value>Starte Simulation...</value>
  </data>
  <data name="SentenceBadFormatConversionErrorOption" xml:space="preserve">
    <value>Die Option '{0}' hat einen falsch-formatierten Wert.</value>
  </data>
  <data name="SentenceBadFormatConversionErrorValue" xml:space="preserve">
    <value>Ein Wert ist falsch formatiert.</value>
  </data>
  <data name="SentenceBadFormatTokenError" xml:space="preserve">
    <value>Der Schlüssel '{0}' ist unbekannt.</value>
  </data>
  <data name="SentenceBadVerbSelectedError" xml:space="preserve">
    <value>Der Unterbefehl '{0}' ist unbekannt.</value>
  </data>
  <data name="SentenceErrorsHeadingText" xml:space="preserve">
    <value>Fehler:</value>
  </data>
  <data name="SentenceHelpCommandTextOption" xml:space="preserve">
    <value>Zeigt diesen Hilfebildschirm an.</value>
  </data>
  <data name="SentenceHelpCommandTextVerb" xml:space="preserve">
    <value>Zeigt mehr Informationen über einen bestimmten Befehl an.</value>
  </data>
  <data name="SentenceMissingRequiredOptionError" xml:space="preserve">
    <value>Ein benötigter Wert fehlt.</value>
  </data>
  <data name="SentenceMissingRequiredValueError" xml:space="preserve">
    <value>Ein benötigter Wert fehlt.</value>
  </data>
  <data name="SentenceMissingValueOptionError" xml:space="preserve">
    <value>Die Option '{0}' hat keinen festgelegten Wert.</value>
  </data>
  <data name="SentenceMutuallyExclusiveSetErrors" xml:space="preserve">
    <value>Die Optionen '{0}' sind nicht kompatibel mit '{1}'.</value>
  </data>
  <data name="SentenceNoVerbSelectedError" xml:space="preserve">
    <value>Kein Unterbefehl ausgewählt</value>
  </data>
  <data name="SentenceOptionGroupWord" xml:space="preserve">
    <value>Gruppe</value>
  </data>
  <data name="SentenceRepeatedOptionError" xml:space="preserve">
    <value>Die Option '{0}' hat mehrere Vorkommnisse.</value>
  </data>
  <data name="SentenceRequiredWord" xml:space="preserve">
    <value>(Erforderlich)</value>
  </data>
  <data name="SentenceSequenceOutOfRangeErrorOption" xml:space="preserve">
    <value>A sequence option '{0}' is defined with fewer or more items than required.</value>
  </data>
  <data name="SentenceSequenceOutOfRangeErrorValue" xml:space="preserve">
    <value>Eine Sequenzoption hat weniger Eingaben als erlaubt.</value>
  </data>
  <data name="SentenceSetValueExceptionError" xml:space="preserve">
    <value>Fehler beim Setzen des Wertes {0} für die Einstellung {1}.</value>
  </data>
  <data name="SentenceUnknownOptionError" xml:space="preserve">
    <value>Die Einstellung {0} ist unbekannt.</value>
  </data>
  <data name="SentenceUsageHeadingText" xml:space="preserve">
    <value>Benutzung:</value>
  </data>
  <data name="SentenceVersionCommandText" xml:space="preserve">
    <value>Zeigt die Versionsinformationen an.</value>
  </data>
  <data name="SequencePrefixOptionDescription" xml:space="preserve">
    <value>Die Präfix die vor der Sequenznummer im Dateinamen stehen muss.</value>
  </data>
  <data name="SequenceVerbDescription" xml:space="preserve">
    <value>Ordnet Dateien in einer Sequenz.</value>
  </data>
  <data name="SimulateOptionDescription" xml:space="preserve">
    <value>Aktiviert die Simulation. Die Dateien werden dabei nicht umbenannt.</value>
  </data>
  <data name="VerboseOptionDescription" xml:space="preserve">
    <value>Aktiviert die erweiterte Protokollierung.</value>
  </data>
</root>